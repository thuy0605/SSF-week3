# TODO: create graphql schema for cat. Example type definitions:
# Cat: id, cat_name, weight, birthdate, owner, location, filename
# Location: type, coordinates
# Coordinates: lat, lng
# LocationInput: type, coordinates
# Query: catById, cats, catsByArea, catsByOwner
# Mutation: createCat, updateCat, deleteCat
scalar DateTime

type Cat {
  id: ID!
  cat_name: String!
  weight: Float
  birthdate: DateTime
  owner: Owner
  location: Location
  filename: String
}

type Location {
  type: String
  coordinates: [Float]
}

type Coordinates {
  lat: Float
  lng: Float
}

type Owner {
  email: String
  id: ID
  user_name: String
}

input LocationInput {
  type: String
  coordinates: [Float]
}

input CoordinatesInput {
  lat: Float
  lng: Float
}

type Query {
  catById(id: ID!): Cat
  cats: [Cat]
  catsByArea(topRight: CoordinatesInput!, bottomLeft: CoordinatesInput!): [Cat]
  catsByOwner(ownerId: ID!): [Cat]
}

type Mutation {
  createCat(
    cat_name: String!
    weight: Float!
    birthdate: DateTime!
    owner: ID!
    location: LocationInput!
    filename: String!
  ): Cat
  updateCat(id: ID!, cat_name: String, weight: Float, birthdate: DateTime): Cat
  deleteCat(id: ID!): Cat
}
